/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for the operating system environments in your private data centers through a single management console. For more information, see [Overview of OS Management Hub](https://docs.cloud.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { LifecycleEnvironmentWaiter } from "./lifecycleenvironment-waiter";
import { ManagedInstanceGroupWaiter } from "./managedinstancegroup-waiter";
import { ManagementStationWaiter } from "./managementstation-waiter";
import { OnboardingWaiter } from "./onboarding-waiter";
import { ScheduledJobWaiter } from "./scheduledjob-waiter";
import { SoftwareSourceWaiter } from "./softwaresource-waiter";
import { WorkRequestWaiter } from "./workrequest-waiter";
declare const Breaker: any;
export declare enum LifecycleEnvironmentApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class LifecycleEnvironmentClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": LifecycleEnvironmentWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new LifecycleEnvironmentWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): LifecycleEnvironmentWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): LifecycleEnvironmentWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Attach(add) managed instances to a lifecycle stage.
     * Once added operations can be applied to all managed instances in the lifecycle stage.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AttachManagedInstancesToLifecycleStageRequest
     * @return AttachManagedInstancesToLifecycleStageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/AttachManagedInstancesToLifecycleStage.ts.html |here} to see how to use AttachManagedInstancesToLifecycleStage API.
     */
    attachManagedInstancesToLifecycleStage(attachManagedInstancesToLifecycleStageRequest: requests.AttachManagedInstancesToLifecycleStageRequest): Promise<responses.AttachManagedInstancesToLifecycleStageResponse>;
    /**
     * Creates a new lifecycle environment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateLifecycleEnvironmentRequest
     * @return CreateLifecycleEnvironmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/CreateLifecycleEnvironment.ts.html |here} to see how to use CreateLifecycleEnvironment API.
     */
    createLifecycleEnvironment(createLifecycleEnvironmentRequest: requests.CreateLifecycleEnvironmentRequest): Promise<responses.CreateLifecycleEnvironmentResponse>;
    /**
     * Deletes a lifecycle environment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteLifecycleEnvironmentRequest
     * @return DeleteLifecycleEnvironmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DeleteLifecycleEnvironment.ts.html |here} to see how to use DeleteLifecycleEnvironment API.
     */
    deleteLifecycleEnvironment(deleteLifecycleEnvironmentRequest: requests.DeleteLifecycleEnvironmentRequest): Promise<responses.DeleteLifecycleEnvironmentResponse>;
    /**
     * Detach(remove) managed instance from a lifecycle stage.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DetachManagedInstancesFromLifecycleStageRequest
     * @return DetachManagedInstancesFromLifecycleStageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DetachManagedInstancesFromLifecycleStage.ts.html |here} to see how to use DetachManagedInstancesFromLifecycleStage API.
     */
    detachManagedInstancesFromLifecycleStage(detachManagedInstancesFromLifecycleStageRequest: requests.DetachManagedInstancesFromLifecycleStageRequest): Promise<responses.DetachManagedInstancesFromLifecycleStageResponse>;
    /**
     * Gets information about the specified lifecycle environment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetLifecycleEnvironmentRequest
     * @return GetLifecycleEnvironmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetLifecycleEnvironment.ts.html |here} to see how to use GetLifecycleEnvironment API.
     */
    getLifecycleEnvironment(getLifecycleEnvironmentRequest: requests.GetLifecycleEnvironmentRequest): Promise<responses.GetLifecycleEnvironmentResponse>;
    /**
     * Gets information about the specified lifecycle stage.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetLifecycleStageRequest
     * @return GetLifecycleStageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetLifecycleStage.ts.html |here} to see how to use GetLifecycleStage API.
     */
    getLifecycleStage(getLifecycleStageRequest: requests.GetLifecycleStageRequest): Promise<responses.GetLifecycleStageResponse>;
    /**
     * Lists lifecycle environments that match the specified compartment or lifecycle environment OCID. Filter the list
     * against a variety of criteria including but not limited to its name, status, architecture, and OS family.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListLifecycleEnvironmentsRequest
     * @return ListLifecycleEnvironmentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListLifecycleEnvironments.ts.html |here} to see how to use ListLifecycleEnvironments API.
     */
    listLifecycleEnvironments(listLifecycleEnvironmentsRequest: requests.ListLifecycleEnvironmentsRequest): Promise<responses.ListLifecycleEnvironmentsResponse>;
    /**
     * Lists installed packages on managed instances in a specified lifecycle stage. Filter the list against a variety
     * of criteria including but not limited to the package name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListLifecycleStageInstalledPackagesRequest
     * @return ListLifecycleStageInstalledPackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListLifecycleStageInstalledPackages.ts.html |here} to see how to use ListLifecycleStageInstalledPackages API.
     */
    listLifecycleStageInstalledPackages(listLifecycleStageInstalledPackagesRequest: requests.ListLifecycleStageInstalledPackagesRequest): Promise<responses.ListLifecycleStageInstalledPackagesResponse>;
    /**
     * Lists lifecycle stages that match the specified compartment or lifecycle stage OCID. Filter the list against
     * a variety of criteria including but not limited to its name, status, architecture, and OS family.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListLifecycleStagesRequest
     * @return ListLifecycleStagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListLifecycleStages.ts.html |here} to see how to use ListLifecycleStages API.
     */
    listLifecycleStages(listLifecycleStagesRequest: requests.ListLifecycleStagesRequest): Promise<responses.ListLifecycleStagesResponse>;
    /**
     * Updates the versioned custom software source content
     * for specified lifecycle stage.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PromoteSoftwareSourceToLifecycleStageRequest
     * @return PromoteSoftwareSourceToLifecycleStageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/PromoteSoftwareSourceToLifecycleStage.ts.html |here} to see how to use PromoteSoftwareSourceToLifecycleStage API.
     */
    promoteSoftwareSourceToLifecycleStage(promoteSoftwareSourceToLifecycleStageRequest: requests.PromoteSoftwareSourceToLifecycleStageRequest): Promise<responses.PromoteSoftwareSourceToLifecycleStageResponse>;
    /**
     * Updates the specified lifecycle environment's name, description, stages, or tags.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateLifecycleEnvironmentRequest
     * @return UpdateLifecycleEnvironmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateLifecycleEnvironment.ts.html |here} to see how to use UpdateLifecycleEnvironment API.
     */
    updateLifecycleEnvironment(updateLifecycleEnvironmentRequest: requests.UpdateLifecycleEnvironmentRequest): Promise<responses.UpdateLifecycleEnvironmentResponse>;
}
export declare enum ManagedInstanceApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ManagedInstanceClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Adds software sources to a managed instance. After the software source has been added,
     * then packages from that software source can be installed on the managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AttachSoftwareSourcesToManagedInstanceRequest
     * @return AttachSoftwareSourcesToManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/AttachSoftwareSourcesToManagedInstance.ts.html |here} to see how to use AttachSoftwareSourcesToManagedInstance API.
     */
    attachSoftwareSourcesToManagedInstance(attachSoftwareSourcesToManagedInstanceRequest: requests.AttachSoftwareSourcesToManagedInstanceRequest): Promise<responses.AttachSoftwareSourcesToManagedInstanceResponse>;
    /**
     * Removes software sources from a managed instance.
     * Packages will no longer be able to be installed from these software sources.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DetachSoftwareSourcesFromManagedInstanceRequest
     * @return DetachSoftwareSourcesFromManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DetachSoftwareSourcesFromManagedInstance.ts.html |here} to see how to use DetachSoftwareSourcesFromManagedInstance API.
     */
    detachSoftwareSourcesFromManagedInstance(detachSoftwareSourcesFromManagedInstanceRequest: requests.DetachSoftwareSourcesFromManagedInstanceRequest): Promise<responses.DetachSoftwareSourcesFromManagedInstanceResponse>;
    /**
     * Disables a module stream on a managed instance.  After the stream is
     * disabled, it is no longer possible to install the profiles that are
     * contained by the stream.  All installed profiles must be removed prior
     * to disabling a module stream.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableModuleStreamOnManagedInstanceRequest
     * @return DisableModuleStreamOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DisableModuleStreamOnManagedInstance.ts.html |here} to see how to use DisableModuleStreamOnManagedInstance API.
     */
    disableModuleStreamOnManagedInstance(disableModuleStreamOnManagedInstanceRequest: requests.DisableModuleStreamOnManagedInstanceRequest): Promise<responses.DisableModuleStreamOnManagedInstanceResponse>;
    /**
     * Enables a module stream on a managed instance.  After the stream is
     * enabled, it is possible to install the profiles that are contained
     * by the stream.  Enabling a stream that is already enabled will
     * succeed.  Attempting to enable a different stream for a module that
     * already has a stream enabled results in an error.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableModuleStreamOnManagedInstanceRequest
     * @return EnableModuleStreamOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/EnableModuleStreamOnManagedInstance.ts.html |here} to see how to use EnableModuleStreamOnManagedInstance API.
     */
    enableModuleStreamOnManagedInstance(enableModuleStreamOnManagedInstanceRequest: requests.EnableModuleStreamOnManagedInstanceRequest): Promise<responses.EnableModuleStreamOnManagedInstanceResponse>;
    /**
     * Gets information about the specified managed instance.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetManagedInstanceRequest
     * @return GetManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetManagedInstance.ts.html |here} to see how to use GetManagedInstance API.
     */
    getManagedInstance(getManagedInstanceRequest: requests.GetManagedInstanceRequest): Promise<responses.GetManagedInstanceResponse>;
    /**
     * Installs a profile for an module stream.  The stream must be
     * enabled before a profile can be installed.  If a module stream
     * defines multiple profiles, each one can be installed independently.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param InstallModuleStreamProfileOnManagedInstanceRequest
     * @return InstallModuleStreamProfileOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/InstallModuleStreamProfileOnManagedInstance.ts.html |here} to see how to use InstallModuleStreamProfileOnManagedInstance API.
     */
    installModuleStreamProfileOnManagedInstance(installModuleStreamProfileOnManagedInstanceRequest: requests.InstallModuleStreamProfileOnManagedInstanceRequest): Promise<responses.InstallModuleStreamProfileOnManagedInstanceResponse>;
    /**
     * Installs packages on a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param InstallPackagesOnManagedInstanceRequest
     * @return InstallPackagesOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/InstallPackagesOnManagedInstance.ts.html |here} to see how to use InstallPackagesOnManagedInstance API.
     */
    installPackagesOnManagedInstance(installPackagesOnManagedInstanceRequest: requests.InstallPackagesOnManagedInstanceRequest): Promise<responses.InstallPackagesOnManagedInstanceResponse>;
    /**
     * Returns a list of available packages for a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceAvailablePackagesRequest
     * @return ListManagedInstanceAvailablePackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceAvailablePackages.ts.html |here} to see how to use ListManagedInstanceAvailablePackages API.
     */
    listManagedInstanceAvailablePackages(listManagedInstanceAvailablePackagesRequest: requests.ListManagedInstanceAvailablePackagesRequest): Promise<responses.ListManagedInstanceAvailablePackagesResponse>;
    /**
     * Returns a list of available software sources for a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceAvailableSoftwareSourcesRequest
     * @return ListManagedInstanceAvailableSoftwareSourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceAvailableSoftwareSources.ts.html |here} to see how to use ListManagedInstanceAvailableSoftwareSources API.
     */
    listManagedInstanceAvailableSoftwareSources(listManagedInstanceAvailableSoftwareSourcesRequest: requests.ListManagedInstanceAvailableSoftwareSourcesRequest): Promise<responses.ListManagedInstanceAvailableSoftwareSourcesResponse>;
    /**
     * Returns a list of applicable errata on the managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceErrataRequest
     * @return ListManagedInstanceErrataResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceErrata.ts.html |here} to see how to use ListManagedInstanceErrata API.
     */
    listManagedInstanceErrata(listManagedInstanceErrataRequest: requests.ListManagedInstanceErrataRequest): Promise<responses.ListManagedInstanceErrataResponse>;
    /**
     * Lists the packages that are installed on the managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceInstalledPackagesRequest
     * @return ListManagedInstanceInstalledPackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceInstalledPackages.ts.html |here} to see how to use ListManagedInstanceInstalledPackages API.
     */
    listManagedInstanceInstalledPackages(listManagedInstanceInstalledPackagesRequest: requests.ListManagedInstanceInstalledPackagesRequest): Promise<responses.ListManagedInstanceInstalledPackagesResponse>;
    /**
       * Retrieve a list of modules, along with streams of the modules,
  * from a managed instance.  Filters may be applied to select
  * a subset of modules based on the filter criteria.
  * <p>
  The 'name' attribute filters against the name of a module.
  * It accepts strings of the format \"<string>\".
  * <p>
  The 'nameContains' attribute filters against the name of a module
  * based on partial match. It accepts strings of the format \"<string>\".
  * If this attribute is defined, only matching modules are included
  * in the result set. If it is not defined, the request  is not subject
  * to this filter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListManagedInstanceModulesRequest
       * @return ListManagedInstanceModulesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceModules.ts.html |here} to see how to use ListManagedInstanceModules API.
       */
    listManagedInstanceModules(listManagedInstanceModulesRequest: requests.ListManagedInstanceModulesRequest): Promise<responses.ListManagedInstanceModulesResponse>;
    /**
     * Returns a list of updatable packages for a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceUpdatablePackagesRequest
     * @return ListManagedInstanceUpdatablePackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceUpdatablePackages.ts.html |here} to see how to use ListManagedInstanceUpdatablePackages API.
     */
    listManagedInstanceUpdatablePackages(listManagedInstanceUpdatablePackagesRequest: requests.ListManagedInstanceUpdatablePackagesRequest): Promise<responses.ListManagedInstanceUpdatablePackagesResponse>;
    /**
     * Lists managed instances that match the specified compartment or managed instance OCID. Filter the list against a variety of criteria including but not limited to its name, status, architecture, and OS version.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstancesRequest
     * @return ListManagedInstancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstances.ts.html |here} to see how to use ListManagedInstances API.
     */
    listManagedInstances(listManagedInstancesRequest: requests.ListManagedInstancesRequest): Promise<responses.ListManagedInstancesResponse>;
    /**
       * Perform an operation involving modules, streams, and profiles on a
  * managed instance.  Each operation may enable or disable an arbitrary
  * amount of module streams, and install or remove an arbitrary number
  * of module stream profiles.  When the operation is complete, the
  * state of the modules, streams, and profiles on the managed instance
  * will match the state indicated in the operation.
  * <p>
  Each module stream specified in the list of module streams to enable
  * will be in the \"ENABLED\" state upon completion of the operation.
  * If there was already a stream of that module enabled, any work
  * required to switch from the current stream to the new stream is
  * performed implicitly.
  * <p>
  Each module stream specified in the list of module streams to disable
  * will be in the \"DISABLED\" state upon completion of the operation.
  * Any profiles that are installed for the module stream will be removed
  * as part of the operation.
  * <p>
  Each module stream profile specified in the list of profiles to install
  * will be in the \"INSTALLED\" state upon completion of the operation,
  * indicating that any packages that are part of the profile are installed
  * on the managed instance.  If the module stream containing the profile
  * is not enabled, it will be enabled as part of the operation.  There
  * is an exception when attempting to install a stream of a profile when
  * another stream of the same module is enabled.  It is an error to attempt
  * to install a profile of another module stream, unless enabling the
  * new module stream is explicitly included in this operation.
  * <p>
  Each module stream profile specified in the list of profiles to remove
  * will be in the \"AVAILABLE\" state upon completion of the operation.
  * The status of packages within the profile after the operation is
  * complete is defined by the package manager on the managed instance.
  * <p>
  Operations that contain one or more elements that are not allowed
  * are rejected.
  * <p>
  The result of this request is a work request object.  The returned
  * work request is the parent of a structure of other WorkRequests.  Taken
  * as a whole, this structure indicates the entire set of work to be
  * performed to complete the operation.
  * <p>
  This interface can also be used to perform a dry run of the operation
  * rather than committing it to a managed instance.  If a dry run is
  * requested, the OS Management Hub service will evaluate the operation
  * against the current module, stream, and profile state on the managed
  * instance.  It will calculate the impact of the operation on all
  * modules, streams, and profiles on the managed instance, including those
  * that are implicitly impacted by the operation.
  * <p>
  The WorkRequest resulting from a dry run behaves differently than
  * a WorkRequest resulting from a committable operation.  Dry run
  * WorkRequests are always singletons and never have children.  The
  * impact of the operation is returned using the log and error
  * facilities of work requests.  The impact of operations that are
  * allowed by the OS Management Hub service are communicated as one or
  * more work request log entries.  Operations that are not allowed
  * by the OS Management Hub service are communicated as one or more
  * work request error entries.  Each entry, for either logs or errors,
  * contains a structured message containing the results of one
  * or more operations.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ManageModuleStreamsOnManagedInstanceRequest
       * @return ManageModuleStreamsOnManagedInstanceResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ManageModuleStreamsOnManagedInstance.ts.html |here} to see how to use ManageModuleStreamsOnManagedInstance API.
       */
    manageModuleStreamsOnManagedInstance(manageModuleStreamsOnManagedInstanceRequest: requests.ManageModuleStreamsOnManagedInstanceRequest): Promise<responses.ManageModuleStreamsOnManagedInstanceResponse>;
    /**
     * Refresh all installed and updatable software information on a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RefreshSoftwareOnManagedInstanceRequest
     * @return RefreshSoftwareOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/RefreshSoftwareOnManagedInstance.ts.html |here} to see how to use RefreshSoftwareOnManagedInstance API.
     */
    refreshSoftwareOnManagedInstance(refreshSoftwareOnManagedInstanceRequest: requests.RefreshSoftwareOnManagedInstanceRequest): Promise<responses.RefreshSoftwareOnManagedInstanceResponse>;
    /**
     * Removes a profile for a module stream that is installed on a managed instance.
     * If a module stream is provided, rather than a fully qualified profile, all
     * profiles that have been installed for the module stream will be removed.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RemoveModuleStreamProfileFromManagedInstanceRequest
     * @return RemoveModuleStreamProfileFromManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/RemoveModuleStreamProfileFromManagedInstance.ts.html |here} to see how to use RemoveModuleStreamProfileFromManagedInstance API.
     */
    removeModuleStreamProfileFromManagedInstance(removeModuleStreamProfileFromManagedInstanceRequest: requests.RemoveModuleStreamProfileFromManagedInstanceRequest): Promise<responses.RemoveModuleStreamProfileFromManagedInstanceResponse>;
    /**
     * Removes an installed package from a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RemovePackagesFromManagedInstanceRequest
     * @return RemovePackagesFromManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/RemovePackagesFromManagedInstance.ts.html |here} to see how to use RemovePackagesFromManagedInstance API.
     */
    removePackagesFromManagedInstance(removePackagesFromManagedInstanceRequest: requests.RemovePackagesFromManagedInstanceRequest): Promise<responses.RemovePackagesFromManagedInstanceResponse>;
    /**
     * Enables a new stream for a module that already has a stream enabled.
     * If any profiles or packages from the original module are installed,
     * switching to a new stream will remove the existing packages and
     * install their counterparts in the new stream.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SwitchModuleStreamOnManagedInstanceRequest
     * @return SwitchModuleStreamOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/SwitchModuleStreamOnManagedInstance.ts.html |here} to see how to use SwitchModuleStreamOnManagedInstance API.
     */
    switchModuleStreamOnManagedInstance(switchModuleStreamOnManagedInstanceRequest: requests.SwitchModuleStreamOnManagedInstanceRequest): Promise<responses.SwitchModuleStreamOnManagedInstanceResponse>;
    /**
     * Install all of the available package updates for all of the managed instances in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAllPackagesOnManagedInstancesInCompartmentRequest
     * @return UpdateAllPackagesOnManagedInstancesInCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateAllPackagesOnManagedInstancesInCompartment.ts.html |here} to see how to use UpdateAllPackagesOnManagedInstancesInCompartment API.
     */
    updateAllPackagesOnManagedInstancesInCompartment(updateAllPackagesOnManagedInstancesInCompartmentRequest: requests.UpdateAllPackagesOnManagedInstancesInCompartmentRequest): Promise<responses.UpdateAllPackagesOnManagedInstancesInCompartmentResponse>;
    /**
     * Updates the managed instance.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateManagedInstanceRequest
     * @return UpdateManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateManagedInstance.ts.html |here} to see how to use UpdateManagedInstance API.
     */
    updateManagedInstance(updateManagedInstanceRequest: requests.UpdateManagedInstanceRequest): Promise<responses.UpdateManagedInstanceResponse>;
    /**
     * Updates a package on a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdatePackagesOnManagedInstanceRequest
     * @return UpdatePackagesOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdatePackagesOnManagedInstance.ts.html |here} to see how to use UpdatePackagesOnManagedInstance API.
     */
    updatePackagesOnManagedInstance(updatePackagesOnManagedInstanceRequest: requests.UpdatePackagesOnManagedInstanceRequest): Promise<responses.UpdatePackagesOnManagedInstanceResponse>;
}
export declare enum ManagedInstanceGroupApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ManagedInstanceGroupClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ManagedInstanceGroupWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ManagedInstanceGroupWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ManagedInstanceGroupWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ManagedInstanceGroupWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Adds managed instances to the specified managed instance group. After the managed
     * instances have been added, then operations can be performed on the managed
     * instance group which will then apply to all managed instances in the
     * group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AttachManagedInstancesToManagedInstanceGroupRequest
     * @return AttachManagedInstancesToManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/AttachManagedInstancesToManagedInstanceGroup.ts.html |here} to see how to use AttachManagedInstancesToManagedInstanceGroup API.
     */
    attachManagedInstancesToManagedInstanceGroup(attachManagedInstancesToManagedInstanceGroupRequest: requests.AttachManagedInstancesToManagedInstanceGroupRequest): Promise<responses.AttachManagedInstancesToManagedInstanceGroupResponse>;
    /**
     * Attaches software sources to the specified managed instance group. The software sources must be compatible with the content for the managed instance group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AttachSoftwareSourcesToManagedInstanceGroupRequest
     * @return AttachSoftwareSourcesToManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/AttachSoftwareSourcesToManagedInstanceGroup.ts.html |here} to see how to use AttachSoftwareSourcesToManagedInstanceGroup API.
     */
    attachSoftwareSourcesToManagedInstanceGroup(attachSoftwareSourcesToManagedInstanceGroupRequest: requests.AttachSoftwareSourcesToManagedInstanceGroupRequest): Promise<responses.AttachSoftwareSourcesToManagedInstanceGroupResponse>;
    /**
     * Creates a new managed instance group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateManagedInstanceGroupRequest
     * @return CreateManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/CreateManagedInstanceGroup.ts.html |here} to see how to use CreateManagedInstanceGroup API.
     */
    createManagedInstanceGroup(createManagedInstanceGroupRequest: requests.CreateManagedInstanceGroupRequest): Promise<responses.CreateManagedInstanceGroupResponse>;
    /**
     * Deletes a specified managed instance group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteManagedInstanceGroupRequest
     * @return DeleteManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DeleteManagedInstanceGroup.ts.html |here} to see how to use DeleteManagedInstanceGroup API.
     */
    deleteManagedInstanceGroup(deleteManagedInstanceGroupRequest: requests.DeleteManagedInstanceGroupRequest): Promise<responses.DeleteManagedInstanceGroupResponse>;
    /**
     * Removes a managed instance from the specified managed instance group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DetachManagedInstancesFromManagedInstanceGroupRequest
     * @return DetachManagedInstancesFromManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DetachManagedInstancesFromManagedInstanceGroup.ts.html |here} to see how to use DetachManagedInstancesFromManagedInstanceGroup API.
     */
    detachManagedInstancesFromManagedInstanceGroup(detachManagedInstancesFromManagedInstanceGroupRequest: requests.DetachManagedInstancesFromManagedInstanceGroupRequest): Promise<responses.DetachManagedInstancesFromManagedInstanceGroupResponse>;
    /**
     * Detaches software sources from a group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DetachSoftwareSourcesFromManagedInstanceGroupRequest
     * @return DetachSoftwareSourcesFromManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DetachSoftwareSourcesFromManagedInstanceGroup.ts.html |here} to see how to use DetachSoftwareSourcesFromManagedInstanceGroup API.
     */
    detachSoftwareSourcesFromManagedInstanceGroup(detachSoftwareSourcesFromManagedInstanceGroupRequest: requests.DetachSoftwareSourcesFromManagedInstanceGroupRequest): Promise<responses.DetachSoftwareSourcesFromManagedInstanceGroupResponse>;
    /**
     * Disables a module stream on a managed instance group. After the stream is
     * disabled, it is no longer possible to install the profiles that are
     * contained by the stream. All installed profiles must be removed prior
     * to disabling a module stream.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableModuleStreamOnManagedInstanceGroupRequest
     * @return DisableModuleStreamOnManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DisableModuleStreamOnManagedInstanceGroup.ts.html |here} to see how to use DisableModuleStreamOnManagedInstanceGroup API.
     */
    disableModuleStreamOnManagedInstanceGroup(disableModuleStreamOnManagedInstanceGroupRequest: requests.DisableModuleStreamOnManagedInstanceGroupRequest): Promise<responses.DisableModuleStreamOnManagedInstanceGroupResponse>;
    /**
     * Enables a module stream on a managed instance group.  After the stream is
     * enabled, it is possible to install the profiles that are contained
     * by the stream.  Enabling a stream that is already enabled will
     * succeed.  Attempting to enable a different stream for a module that
     * already has a stream enabled results in an error.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableModuleStreamOnManagedInstanceGroupRequest
     * @return EnableModuleStreamOnManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/EnableModuleStreamOnManagedInstanceGroup.ts.html |here} to see how to use EnableModuleStreamOnManagedInstanceGroup API.
     */
    enableModuleStreamOnManagedInstanceGroup(enableModuleStreamOnManagedInstanceGroupRequest: requests.EnableModuleStreamOnManagedInstanceGroupRequest): Promise<responses.EnableModuleStreamOnManagedInstanceGroupResponse>;
    /**
     * Gets information about the specified managed instance group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetManagedInstanceGroupRequest
     * @return GetManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetManagedInstanceGroup.ts.html |here} to see how to use GetManagedInstanceGroup API.
     */
    getManagedInstanceGroup(getManagedInstanceGroupRequest: requests.GetManagedInstanceGroupRequest): Promise<responses.GetManagedInstanceGroupResponse>;
    /**
     * Installs a profile for an module stream. The stream must be
     * enabled before a profile can be installed. If a module stream
     * defines multiple profiles, each one can be installed independently.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param InstallModuleStreamProfileOnManagedInstanceGroupRequest
     * @return InstallModuleStreamProfileOnManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/InstallModuleStreamProfileOnManagedInstanceGroup.ts.html |here} to see how to use InstallModuleStreamProfileOnManagedInstanceGroup API.
     */
    installModuleStreamProfileOnManagedInstanceGroup(installModuleStreamProfileOnManagedInstanceGroupRequest: requests.InstallModuleStreamProfileOnManagedInstanceGroupRequest): Promise<responses.InstallModuleStreamProfileOnManagedInstanceGroupResponse>;
    /**
     * Installs package(s) on each managed instance in a managed instance group. The package must be compatible with the
     * instances in the managed instance group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param InstallPackagesOnManagedInstanceGroupRequest
     * @return InstallPackagesOnManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/InstallPackagesOnManagedInstanceGroup.ts.html |here} to see how to use InstallPackagesOnManagedInstanceGroup API.
     */
    installPackagesOnManagedInstanceGroup(installPackagesOnManagedInstanceGroupRequest: requests.InstallPackagesOnManagedInstanceGroupRequest): Promise<responses.InstallPackagesOnManagedInstanceGroupResponse>;
    /**
     * Lists available modules that for the specified managed instance group. Filter the list against a variety of
     * criteria including but not limited to its name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceGroupAvailableModulesRequest
     * @return ListManagedInstanceGroupAvailableModulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceGroupAvailableModules.ts.html |here} to see how to use ListManagedInstanceGroupAvailableModules API.
     */
    listManagedInstanceGroupAvailableModules(listManagedInstanceGroupAvailableModulesRequest: requests.ListManagedInstanceGroupAvailableModulesRequest): Promise<responses.ListManagedInstanceGroupAvailableModulesResponse>;
    /**
     * Lists available packages on the specified managed instances group. Filter the list against a variety
     * of criteria including but not limited to the package name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceGroupAvailablePackagesRequest
     * @return ListManagedInstanceGroupAvailablePackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceGroupAvailablePackages.ts.html |here} to see how to use ListManagedInstanceGroupAvailablePackages API.
     */
    listManagedInstanceGroupAvailablePackages(listManagedInstanceGroupAvailablePackagesRequest: requests.ListManagedInstanceGroupAvailablePackagesRequest): Promise<responses.ListManagedInstanceGroupAvailablePackagesResponse>;
    /**
     * Lists available software sources for a specified managed instance group. Filter the list against a variety of
     * criteria including but not limited to its name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceGroupAvailableSoftwareSourcesRequest
     * @return ListManagedInstanceGroupAvailableSoftwareSourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceGroupAvailableSoftwareSources.ts.html |here} to see how to use ListManagedInstanceGroupAvailableSoftwareSources API.
     */
    listManagedInstanceGroupAvailableSoftwareSources(listManagedInstanceGroupAvailableSoftwareSourcesRequest: requests.ListManagedInstanceGroupAvailableSoftwareSourcesRequest): Promise<responses.ListManagedInstanceGroupAvailableSoftwareSourcesResponse>;
    /**
     * Lists installed packages on the specified managed instances group. Filter the list against a variety
     * of criteria including but not limited to the package name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceGroupInstalledPackagesRequest
     * @return ListManagedInstanceGroupInstalledPackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceGroupInstalledPackages.ts.html |here} to see how to use ListManagedInstanceGroupInstalledPackages API.
     */
    listManagedInstanceGroupInstalledPackages(listManagedInstanceGroupInstalledPackagesRequest: requests.ListManagedInstanceGroupInstalledPackagesRequest): Promise<responses.ListManagedInstanceGroupInstalledPackagesResponse>;
    /**
       * Retrieve a list of module streams, along with a summary of their
  * status, from a managed instance group.  Filters may be applied to select
  * a subset of module streams based on the filter criteria.
  * <p>
  The 'moduleName' attribute filters against the name of a module.
  * It accepts strings of the format \"<module>\".  If this attribute
  * is defined, only streams that belong to the specified module are
  * included in the result set.  If it is not defined, the request is
  * not subject to this filter.
  * <p>
  The \"status\" attribute filters against the state of a module stream.
  * Valid values are \"ENABLED\", \"DISABLED\", and \"ACTIVE\".  If the
  * attribute is set to \"ENABLED\", only module streams that are enabled
  * are included in the result set.  If the attribute is set to \"DISABLED\",
  * only module streams that are not enabled are included in the result
  * set.  If the attribute is set to \"ACTIVE\", only module streams that
  * are active are included in the result set.  If the attribute is not
  * defined, the request is not subject to this filter.
  * <p>
  When sorting by the display name, the result set is sorted first
  * by the module name and then by the stream name.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListManagedInstanceGroupModulesRequest
       * @return ListManagedInstanceGroupModulesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceGroupModules.ts.html |here} to see how to use ListManagedInstanceGroupModules API.
       */
    listManagedInstanceGroupModules(listManagedInstanceGroupModulesRequest: requests.ListManagedInstanceGroupModulesRequest): Promise<responses.ListManagedInstanceGroupModulesResponse>;
    /**
     * Lists managed instance groups that match the specified compartment or managed instance group OCID. Filter the
     * list against a variety of criteria including but not limited to its name, status, architecture, and OS family.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceGroupsRequest
     * @return ListManagedInstanceGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagedInstanceGroups.ts.html |here} to see how to use ListManagedInstanceGroups API.
     */
    listManagedInstanceGroups(listManagedInstanceGroupsRequest: requests.ListManagedInstanceGroupsRequest): Promise<responses.ListManagedInstanceGroupsResponse>;
    /**
       * Perform an operation involving modules, streams, and profiles on a
  * managed instance group.  Each operation may enable or disable an arbitrary
  * amount of module streams, and install or remove an arbitrary number
  * of module stream profiles.  When the operation is complete, the
  * state of the modules, streams, and profiles on the managed instance group
  * will match the state indicated in the operation.
  * <p>
  Each module stream specified in the list of module streams to enable
  * will be in the \"ENABLED\" state upon completion of the operation.
  * If there was already a stream of that module enabled, any work
  * required to switch from the current stream to the new stream is
  * performed implicitly.
  * <p>
  Each module stream specified in the list of module streams to disable
  * will be in the \"DISABLED\" state upon completion of the operation.
  * Any profiles that are installed for the module stream will be removed
  * as part of the operation.
  * <p>
  Each module stream profile specified in the list of profiles to install
  * will be in the \"INSTALLED\" state upon completion of the operation,
  * indicating that any packages that are part of the profile are installed
  * on the managed instance.  If the module stream containing the profile
  * is not enabled, it will be enabled as part of the operation. There
  * is an exception when attempting to install a stream of a profile when
  * another stream of the same module is enabled.  It is an error to attempt
  * to install a profile of another module stream, unless enabling the
  * new module stream is explicitly included in this operation.
  * <p>
  Each module stream profile specified in the list of profiles to remove
  * will be in the \"AVAILABLE\" state upon completion of the operation.
  * The status of packages within the profile after the operation is
  * complete is defined by the package manager on the managed instance group.
  * <p>
  Operations that contain one or more elements that are not allowed
  * are rejected.
  * <p>
  The result of this request is a work request object. The returned
  * work request is the parent of a structure of other work requests.  Taken
  * as a whole, this structure indicates the entire set of work to be
  * performed to complete the operation.
  * <p>
  This interface can also be used to perform a dry run of the operation
  * rather than committing it to a managed instance group.  If a dry run is
  * requested, the OS Management Hub service will evaluate the operation
  * against the current module, stream, and profile state on the managed
  * instance.  It will calculate the impact of the operation on all
  * modules, streams, and profiles on the managed instance, including those
  * that are implicitly impacted by the operation.
  * <p>
  The work request resulting from a dry run behaves differently than
  * a work request resulting from a committable operation.  Dry run
  * work requests are always singletons and never have children. The
  * impact of the operation is returned using the log and error
  * facilities of work requests. The impact of operations that are
  * allowed by the OS Management Hub service are communicated as one or
  * more work request log entries.  Operations that are not allowed
  * by the OS Management Hub service are communicated as one or more
  * work request error entries.  Each entry, for either logs or errors,
  * contains a structured message containing the results of one
  * or more operations.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ManageModuleStreamsOnManagedInstanceGroupRequest
       * @return ManageModuleStreamsOnManagedInstanceGroupResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ManageModuleStreamsOnManagedInstanceGroup.ts.html |here} to see how to use ManageModuleStreamsOnManagedInstanceGroup API.
       */
    manageModuleStreamsOnManagedInstanceGroup(manageModuleStreamsOnManagedInstanceGroupRequest: requests.ManageModuleStreamsOnManagedInstanceGroupRequest): Promise<responses.ManageModuleStreamsOnManagedInstanceGroupResponse>;
    /**
     * Removes a profile for a module stream that is installed on a managed instance group.
     * If a module stream is provided, rather than a fully qualified profile, all
     * profiles that have been installed for the module stream will be removed.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RemoveModuleStreamProfileFromManagedInstanceGroupRequest
     * @return RemoveModuleStreamProfileFromManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/RemoveModuleStreamProfileFromManagedInstanceGroup.ts.html |here} to see how to use RemoveModuleStreamProfileFromManagedInstanceGroup API.
     */
    removeModuleStreamProfileFromManagedInstanceGroup(removeModuleStreamProfileFromManagedInstanceGroupRequest: requests.RemoveModuleStreamProfileFromManagedInstanceGroupRequest): Promise<responses.RemoveModuleStreamProfileFromManagedInstanceGroupResponse>;
    /**
     * Removes package(s) from each managed instance in a specified managed instance group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RemovePackagesFromManagedInstanceGroupRequest
     * @return RemovePackagesFromManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/RemovePackagesFromManagedInstanceGroup.ts.html |here} to see how to use RemovePackagesFromManagedInstanceGroup API.
     */
    removePackagesFromManagedInstanceGroup(removePackagesFromManagedInstanceGroupRequest: requests.RemovePackagesFromManagedInstanceGroupRequest): Promise<responses.RemovePackagesFromManagedInstanceGroupResponse>;
    /**
     * Updates all packages on each managed instance in the specified managed instance group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAllPackagesOnManagedInstanceGroupRequest
     * @return UpdateAllPackagesOnManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateAllPackagesOnManagedInstanceGroup.ts.html |here} to see how to use UpdateAllPackagesOnManagedInstanceGroup API.
     */
    updateAllPackagesOnManagedInstanceGroup(updateAllPackagesOnManagedInstanceGroupRequest: requests.UpdateAllPackagesOnManagedInstanceGroupRequest): Promise<responses.UpdateAllPackagesOnManagedInstanceGroupResponse>;
    /**
     * Updates the specified managed instance group's name, description, and tags.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateManagedInstanceGroupRequest
     * @return UpdateManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateManagedInstanceGroup.ts.html |here} to see how to use UpdateManagedInstanceGroup API.
     */
    updateManagedInstanceGroup(updateManagedInstanceGroupRequest: requests.UpdateManagedInstanceGroupRequest): Promise<responses.UpdateManagedInstanceGroupResponse>;
}
export declare enum ManagementStationApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ManagementStationClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ManagementStationWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ManagementStationWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ManagementStationWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ManagementStationWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Creates a management station.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateManagementStationRequest
     * @return CreateManagementStationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/CreateManagementStation.ts.html |here} to see how to use CreateManagementStation API.
     */
    createManagementStation(createManagementStationRequest: requests.CreateManagementStationRequest): Promise<responses.CreateManagementStationResponse>;
    /**
     * Deletes a management station.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteManagementStationRequest
     * @return DeleteManagementStationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DeleteManagementStation.ts.html |here} to see how to use DeleteManagementStation API.
     */
    deleteManagementStation(deleteManagementStationRequest: requests.DeleteManagementStationRequest): Promise<responses.DeleteManagementStationResponse>;
    /**
     * Gets information about the specified management station.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetManagementStationRequest
     * @return GetManagementStationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetManagementStation.ts.html |here} to see how to use GetManagementStation API.
     */
    getManagementStation(getManagementStationRequest: requests.GetManagementStationRequest): Promise<responses.GetManagementStationResponse>;
    /**
     * Lists management stations in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagementStationsRequest
     * @return ListManagementStationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListManagementStations.ts.html |here} to see how to use ListManagementStations API.
     */
    listManagementStations(listManagementStationsRequest: requests.ListManagementStationsRequest): Promise<responses.ListManagementStationsResponse>;
    /**
     * Lists all software source mirrors associated with a specified management station.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMirrorsRequest
     * @return ListMirrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListMirrors.ts.html |here} to see how to use ListMirrors API.
     */
    listMirrors(listMirrorsRequest: requests.ListMirrorsRequest): Promise<responses.ListMirrorsResponse>;
    /**
     * Synchronizes the specified mirrors associated with the management station.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SynchronizeMirrorsRequest
     * @return SynchronizeMirrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/SynchronizeMirrors.ts.html |here} to see how to use SynchronizeMirrors API.
     */
    synchronizeMirrors(synchronizeMirrorsRequest: requests.SynchronizeMirrorsRequest): Promise<responses.SynchronizeMirrorsResponse>;
    /**
     * Synchronize the specified mirror associated with a management station.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SynchronizeSingleMirrorsRequest
     * @return SynchronizeSingleMirrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/SynchronizeSingleMirrors.ts.html |here} to see how to use SynchronizeSingleMirrors API.
     */
    synchronizeSingleMirrors(synchronizeSingleMirrorsRequest: requests.SynchronizeSingleMirrorsRequest): Promise<responses.SynchronizeSingleMirrorsResponse>;
    /**
     * Updates the configuration of the specified management station.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateManagementStationRequest
     * @return UpdateManagementStationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateManagementStation.ts.html |here} to see how to use UpdateManagementStation API.
     */
    updateManagementStation(updateManagementStationRequest: requests.UpdateManagementStationRequest): Promise<responses.UpdateManagementStationResponse>;
}
export declare enum OnboardingApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class OnboardingClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": OnboardingWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new OnboardingWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): OnboardingWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): OnboardingWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Creates a registration profile.
     * A profile is a supplementary file for the OS Management Hub agentry
     * that dictates the content for a managed instance at registration time.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateProfileRequest
     * @return CreateProfileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/CreateProfile.ts.html |here} to see how to use CreateProfile API.
     */
    createProfile(createProfileRequest: requests.CreateProfileRequest): Promise<responses.CreateProfileResponse>;
    /**
     * Deletes a specified registration profile.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteProfileRequest
     * @return DeleteProfileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DeleteProfile.ts.html |here} to see how to use DeleteProfile API.
     */
    deleteProfile(deleteProfileRequest: requests.DeleteProfileRequest): Promise<responses.DeleteProfileResponse>;
    /**
     * Gets information about the specified registration profile.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProfileRequest
     * @return GetProfileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetProfile.ts.html |here} to see how to use GetProfile API.
     */
    getProfile(getProfileRequest: requests.GetProfileRequest): Promise<responses.GetProfileResponse>;
    /**
     * Lists registration profiles that match the specified compartment or profile OCID. Filter the list against a
     * variety of criteria including but not limited to its name, status, vendor name, and architecture type.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListProfilesRequest
     * @return ListProfilesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListProfiles.ts.html |here} to see how to use ListProfiles API.
     */
    listProfiles(listProfilesRequest: requests.ListProfilesRequest): Promise<responses.ListProfilesResponse>;
    /**
     * Updates the specified profile's name, description, and tags.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateProfileRequest
     * @return UpdateProfileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateProfile.ts.html |here} to see how to use UpdateProfile API.
     */
    updateProfile(updateProfileRequest: requests.UpdateProfileRequest): Promise<responses.UpdateProfileResponse>;
}
export declare enum ReportingManagedInstanceApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ReportingManagedInstanceClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Returns a CSV format report of managed instances matching the given filters.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetManagedInstanceAnalyticContentRequest
     * @return GetManagedInstanceAnalyticContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetManagedInstanceAnalyticContent.ts.html |here} to see how to use GetManagedInstanceAnalyticContent API.
     */
    getManagedInstanceAnalyticContent(getManagedInstanceAnalyticContentRequest: requests.GetManagedInstanceAnalyticContentRequest): Promise<responses.GetManagedInstanceAnalyticContentResponse>;
    /**
     * Returns a CSV format report of a single managed instance whose associated Erratas match the given filters.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetManagedInstanceContentRequest
     * @return GetManagedInstanceContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetManagedInstanceContent.ts.html |here} to see how to use GetManagedInstanceContent API.
     */
    getManagedInstanceContent(getManagedInstanceContentRequest: requests.GetManagedInstanceContentRequest): Promise<responses.GetManagedInstanceContentResponse>;
    /**
     * Returns a list of user specified metrics for a collection of managed instances.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeManagedInstanceAnalyticsRequest
     * @return SummarizeManagedInstanceAnalyticsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/SummarizeManagedInstanceAnalytics.ts.html |here} to see how to use SummarizeManagedInstanceAnalytics API.
     */
    summarizeManagedInstanceAnalytics(summarizeManagedInstanceAnalyticsRequest: requests.SummarizeManagedInstanceAnalyticsRequest): Promise<responses.SummarizeManagedInstanceAnalyticsResponse>;
}
export declare enum ScheduledJobApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ScheduledJobClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ScheduledJobWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ScheduledJobWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ScheduledJobWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ScheduledJobWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Creates a new scheduled job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateScheduledJobRequest
     * @return CreateScheduledJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/CreateScheduledJob.ts.html |here} to see how to use CreateScheduledJob API.
     */
    createScheduledJob(createScheduledJobRequest: requests.CreateScheduledJobRequest): Promise<responses.CreateScheduledJobResponse>;
    /**
     * Deletes the specified scheduled job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteScheduledJobRequest
     * @return DeleteScheduledJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DeleteScheduledJob.ts.html |here} to see how to use DeleteScheduledJob API.
     */
    deleteScheduledJob(deleteScheduledJobRequest: requests.DeleteScheduledJobRequest): Promise<responses.DeleteScheduledJobResponse>;
    /**
     * Gets information about the specified scheduled job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetScheduledJobRequest
     * @return GetScheduledJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetScheduledJob.ts.html |here} to see how to use GetScheduledJob API.
     */
    getScheduledJob(getScheduledJobRequest: requests.GetScheduledJobRequest): Promise<responses.GetScheduledJobResponse>;
    /**
     * Lists scheduled jobs that match the specified compartment or scheduled job OCID.
     * Filter the list against a variety of criteria including but not limited to its display name,
     * lifecycle state, operation type, and schedule type.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListScheduledJobsRequest
     * @return ListScheduledJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListScheduledJobs.ts.html |here} to see how to use ListScheduledJobs API.
     */
    listScheduledJobs(listScheduledJobsRequest: requests.ListScheduledJobsRequest): Promise<responses.ListScheduledJobsResponse>;
    /**
     * Triggers an already created RECURRING scheduled job to run immediately instead of waiting
     * for its next regularly scheduled time. This operation does not support ONETIME scheduled job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RunScheduledJobNowRequest
     * @return RunScheduledJobNowResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/RunScheduledJobNow.ts.html |here} to see how to use RunScheduledJobNow API.
     */
    runScheduledJobNow(runScheduledJobNowRequest: requests.RunScheduledJobNowRequest): Promise<responses.RunScheduledJobNowResponse>;
    /**
     * Updates the specified scheduled job's name, description, and other details, such as next execution and recurrence.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateScheduledJobRequest
     * @return UpdateScheduledJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateScheduledJob.ts.html |here} to see how to use UpdateScheduledJob API.
     */
    updateScheduledJob(updateScheduledJobRequest: requests.UpdateScheduledJobRequest): Promise<responses.UpdateScheduledJobResponse>;
}
export declare enum SoftwareSourceApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class SoftwareSourceClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": SoftwareSourceWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new SoftwareSourceWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): SoftwareSourceWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): SoftwareSourceWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Updates the availability for a list of specified software sources.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeAvailabilityOfSoftwareSourcesRequest
     * @return ChangeAvailabilityOfSoftwareSourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ChangeAvailabilityOfSoftwareSources.ts.html |here} to see how to use ChangeAvailabilityOfSoftwareSources API.
     */
    changeAvailabilityOfSoftwareSources(changeAvailabilityOfSoftwareSourcesRequest: requests.ChangeAvailabilityOfSoftwareSourcesRequest): Promise<responses.ChangeAvailabilityOfSoftwareSourcesResponse>;
    /**
     * Registers the necessary entitlement credentials for OS vendor software sources.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateEntitlementRequest
     * @return CreateEntitlementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/CreateEntitlement.ts.html |here} to see how to use CreateEntitlement API.
     */
    createEntitlement(createEntitlementRequest: requests.CreateEntitlementRequest): Promise<responses.CreateEntitlementResponse>;
    /**
     * Creates a new versioned or custom software source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateSoftwareSourceRequest
     * @return CreateSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/CreateSoftwareSource.ts.html |here} to see how to use CreateSoftwareSource API.
     */
    createSoftwareSource(createSoftwareSourceRequest: requests.CreateSoftwareSourceRequest): Promise<responses.CreateSoftwareSourceResponse>;
    /**
     * Deletes the specified software source.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteSoftwareSourceRequest
     * @return DeleteSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/DeleteSoftwareSource.ts.html |here} to see how to use DeleteSoftwareSource API.
     */
    deleteSoftwareSource(deleteSoftwareSourceRequest: requests.DeleteSoftwareSourceRequest): Promise<responses.DeleteSoftwareSourceResponse>;
    /**
     * Gets information about the specified erratum by its advisory name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetErratumRequest
     * @return GetErratumResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetErratum.ts.html |here} to see how to use GetErratum API.
     */
    getErratum(getErratumRequest: requests.GetErratumRequest): Promise<responses.GetErratumResponse>;
    /**
     * Gets information about the specified module stream in a software source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetModuleStreamRequest
     * @return GetModuleStreamResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetModuleStream.ts.html |here} to see how to use GetModuleStream API.
     */
    getModuleStream(getModuleStreamRequest: requests.GetModuleStreamRequest): Promise<responses.GetModuleStreamResponse>;
    /**
     * Gets information about the specified module stream profile in a software source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetModuleStreamProfileRequest
     * @return GetModuleStreamProfileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetModuleStreamProfile.ts.html |here} to see how to use GetModuleStreamProfile API.
     */
    getModuleStreamProfile(getModuleStreamProfileRequest: requests.GetModuleStreamProfileRequest): Promise<responses.GetModuleStreamProfileResponse>;
    /**
     * Gets information about the specified package group from a software source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetPackageGroupRequest
     * @return GetPackageGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetPackageGroup.ts.html |here} to see how to use GetPackageGroup API.
     */
    getPackageGroup(getPackageGroupRequest: requests.GetPackageGroupRequest): Promise<responses.GetPackageGroupResponse>;
    /**
     * Gets information about the specified software package.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetSoftwarePackageRequest
     * @return GetSoftwarePackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetSoftwarePackage.ts.html |here} to see how to use GetSoftwarePackage API.
     */
    getSoftwarePackage(getSoftwarePackageRequest: requests.GetSoftwarePackageRequest): Promise<responses.GetSoftwarePackageResponse>;
    /**
     * Gets information about the specified software source.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetSoftwareSourceRequest
     * @return GetSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetSoftwareSource.ts.html |here} to see how to use GetSoftwareSource API.
     */
    getSoftwareSource(getSoftwareSourceRequest: requests.GetSoftwareSourceRequest): Promise<responses.GetSoftwareSourceResponse>;
    /**
     * Lists entitlements in the specified tenancy OCID. Filter the list against a variety of criteria including but
     * not limited to its CSI, and vendor name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListEntitlementsRequest
     * @return ListEntitlementsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListEntitlements.ts.html |here} to see how to use ListEntitlements API.
     */
    listEntitlements(listEntitlementsRequest: requests.ListEntitlementsRequest): Promise<responses.ListEntitlementsResponse>;
    /**
     * Lists all of the currently available errata. Filter the list against a variety of criteria including but not
     * limited to its name, classification type, advisory severity, and OS family.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListErrataRequest
     * @return ListErrataResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListErrata.ts.html |here} to see how to use ListErrata API.
     */
    listErrata(listErrataRequest: requests.ListErrataRequest): Promise<responses.ListErrataResponse>;
    /**
     * Lists module stream profiles from the specified software source OCID. Filter the list against a variety of
     * criteria including but not limited to its module name, stream name, and (profile) name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListModuleStreamProfilesRequest
     * @return ListModuleStreamProfilesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListModuleStreamProfiles.ts.html |here} to see how to use ListModuleStreamProfiles API.
     */
    listModuleStreamProfiles(listModuleStreamProfilesRequest: requests.ListModuleStreamProfilesRequest): Promise<responses.ListModuleStreamProfilesResponse>;
    /**
     * Lists module streams from the specified software source OCID. Filter the list against a variety of
     * criteria including but not limited to its module name and (stream) name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListModuleStreamsRequest
     * @return ListModuleStreamsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListModuleStreams.ts.html |here} to see how to use ListModuleStreams API.
     */
    listModuleStreams(listModuleStreamsRequest: requests.ListModuleStreamsRequest): Promise<responses.ListModuleStreamsResponse>;
    /**
     * Lists package groups that associate with the specified software source OCID. Filter the list against a
     * variety of criteria including but not limited to its name, and package group type.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListPackageGroupsRequest
     * @return ListPackageGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListPackageGroups.ts.html |here} to see how to use ListPackageGroups API.
     */
    listPackageGroups(listPackageGroupsRequest: requests.ListPackageGroupsRequest): Promise<responses.ListPackageGroupsResponse>;
    /**
     * Lists software packages in the specified software source.  Filter the list against a variety of criteria
     * including but not limited to its name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListSoftwarePackagesRequest
     * @return ListSoftwarePackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListSoftwarePackages.ts.html |here} to see how to use ListSoftwarePackages API.
     */
    listSoftwarePackages(listSoftwarePackagesRequest: requests.ListSoftwarePackagesRequest): Promise<responses.ListSoftwarePackagesResponse>;
    /**
     * Lists available software source vendors. Filter the list against a variety of criteria including but not limited
     * to its name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListSoftwareSourceVendorsRequest
     * @return ListSoftwareSourceVendorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListSoftwareSourceVendors.ts.html |here} to see how to use ListSoftwareSourceVendors API.
     */
    listSoftwareSourceVendors(listSoftwareSourceVendorsRequest: requests.ListSoftwareSourceVendorsRequest): Promise<responses.ListSoftwareSourceVendorsResponse>;
    /**
     * Lists software sources that match the specified tenancy or software source OCID. Filter the list against a
     * variety of criteria including but not limited to its name, status, architecture, and OS family.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListSoftwareSourcesRequest
     * @return ListSoftwareSourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListSoftwareSources.ts.html |here} to see how to use ListSoftwareSources API.
     */
    listSoftwareSources(listSoftwareSourcesRequest: requests.ListSoftwareSourcesRequest): Promise<responses.ListSoftwareSourcesResponse>;
    /**
     * Lists modules from a list of software sources. Filter the list against a variety of
     * criteria including the module name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SearchSoftwareSourceModuleStreamsRequest
     * @return SearchSoftwareSourceModuleStreamsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/SearchSoftwareSourceModuleStreams.ts.html |here} to see how to use SearchSoftwareSourceModuleStreams API.
     */
    searchSoftwareSourceModuleStreams(searchSoftwareSourceModuleStreamsRequest: requests.SearchSoftwareSourceModuleStreamsRequest): Promise<responses.SearchSoftwareSourceModuleStreamsResponse>;
    /**
     * Lists modules from a list of software sources. Filter the list against a variety of
     * criteria including the (module) name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SearchSoftwareSourceModulesRequest
     * @return SearchSoftwareSourceModulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/SearchSoftwareSourceModules.ts.html |here} to see how to use SearchSoftwareSourceModules API.
     */
    searchSoftwareSourceModules(searchSoftwareSourceModulesRequest: requests.SearchSoftwareSourceModulesRequest): Promise<responses.SearchSoftwareSourceModulesResponse>;
    /**
     * Searches the package groups from the specified list of software sources. Filter the list against a variety of criteria
     * including but not limited to its name, and group type.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SearchSoftwareSourcePackageGroupsRequest
     * @return SearchSoftwareSourcePackageGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/SearchSoftwareSourcePackageGroups.ts.html |here} to see how to use SearchSoftwareSourcePackageGroups API.
     */
    searchSoftwareSourcePackageGroups(searchSoftwareSourcePackageGroupsRequest: requests.SearchSoftwareSourcePackageGroupsRequest): Promise<responses.SearchSoftwareSourcePackageGroupsResponse>;
    /**
     * Updates the specified software source's details, including but not limited to name, description, and tags.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateSoftwareSourceRequest
     * @return UpdateSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/UpdateSoftwareSource.ts.html |here} to see how to use UpdateSoftwareSource API.
     */
    updateSoftwareSource(updateSoftwareSourceRequest: requests.UpdateSoftwareSourceRequest): Promise<responses.UpdateSoftwareSourceResponse>;
}
export declare enum WorkRequestApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class WorkRequestClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": WorkRequestWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new WorkRequestWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): WorkRequestWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): WorkRequestWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Gets information about the specified work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Gets the errors for the specified work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Gets the logs for the specified work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists work requests that match the specified compartment or work request OCID. Filter the list against
     * a variety of criteria including but not limited to its name, status, and operation type.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.83.0/osmanagementhub/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
}
export {};
