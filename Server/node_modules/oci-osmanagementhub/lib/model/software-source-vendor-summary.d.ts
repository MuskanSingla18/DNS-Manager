/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for the operating system environments in your private data centers through a single management console. For more information, see [Overview of OS Management Hub](https://docs.cloud.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Software vendor name, list of osFamily and archType.
 */
export interface SoftwareSourceVendorSummary {
    /**
     * Name of the vendor providing the software source.
     */
    "name": model.VendorName;
    /**
     * List of corresponding osFamilies.
     */
    "osFamilies": Array<SoftwareSourceVendorSummary.OsFamilies>;
    /**
     * List of corresponding archTypes.
     */
    "archTypes": Array<SoftwareSourceVendorSummary.ArchTypes>;
}
export declare namespace SoftwareSourceVendorSummary {
    enum OsFamilies {
        OracleLinux9 = "ORACLE_LINUX_9",
        OracleLinux8 = "ORACLE_LINUX_8",
        OracleLinux7 = "ORACLE_LINUX_7",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum ArchTypes {
        X8664 = "X86_64",
        Aarch64 = "AARCH64",
        I686 = "I686",
        Noarch = "NOARCH",
        Src = "SRC",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: SoftwareSourceVendorSummary): object;
    function getDeserializedJsonObj(obj: SoftwareSourceVendorSummary): object;
}
